// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/receipts_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	models "receipts-api/pkg/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReceiptsService is a mock of ReceiptsService interface.
type MockReceiptsService struct {
	ctrl     *gomock.Controller
	recorder *MockReceiptsServiceMockRecorder
}

// MockReceiptsServiceMockRecorder is the mock recorder for MockReceiptsService.
type MockReceiptsServiceMockRecorder struct {
	mock *MockReceiptsService
}

// NewMockReceiptsService creates a new mock instance.
func NewMockReceiptsService(ctrl *gomock.Controller) *MockReceiptsService {
	mock := &MockReceiptsService{ctrl: ctrl}
	mock.recorder = &MockReceiptsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReceiptsService) EXPECT() *MockReceiptsServiceMockRecorder {
	return m.recorder
}

// CreateReceipt mocks base method.
func (m *MockReceiptsService) CreateReceipt(receipt models.Receipt) (*models.Receipt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReceipt", receipt)
	ret0, _ := ret[0].(*models.Receipt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReceipt indicates an expected call of CreateReceipt.
func (mr *MockReceiptsServiceMockRecorder) CreateReceipt(receipt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReceipt", reflect.TypeOf((*MockReceiptsService)(nil).CreateReceipt), receipt)
}
