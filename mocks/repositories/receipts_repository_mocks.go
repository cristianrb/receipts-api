// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/receipts_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "receipts-api/pkg/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReceiptsRepository is a mock of ReceiptsRepository interface.
type MockReceiptsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockReceiptsRepositoryMockRecorder
}

// MockReceiptsRepositoryMockRecorder is the mock recorder for MockReceiptsRepository.
type MockReceiptsRepositoryMockRecorder struct {
	mock *MockReceiptsRepository
}

// NewMockReceiptsRepository creates a new mock instance.
func NewMockReceiptsRepository(ctrl *gomock.Controller) *MockReceiptsRepository {
	mock := &MockReceiptsRepository{ctrl: ctrl}
	mock.recorder = &MockReceiptsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReceiptsRepository) EXPECT() *MockReceiptsRepositoryMockRecorder {
	return m.recorder
}

// CreateReceipt mocks base method.
func (m *MockReceiptsRepository) CreateReceipt(receipt *models.Receipt) (*models.Receipt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReceipt", receipt)
	ret0, _ := ret[0].(*models.Receipt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReceipt indicates an expected call of CreateReceipt.
func (mr *MockReceiptsRepositoryMockRecorder) CreateReceipt(receipt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReceipt", reflect.TypeOf((*MockReceiptsRepository)(nil).CreateReceipt), receipt)
}
